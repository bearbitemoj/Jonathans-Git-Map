Yindex[i,1]= max(loglike(Ydata,theta))
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
setwd("~/Documents/Skolgrejer/MyGitMap/TDDE01")
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.R', echo=TRUE)
library("kknn", lib.loc="N:/R-3.3.2/library")
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
help(plot)
help("lines")
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
############
##Step 1-2##
############
loglike=function(x, theta){
result = log(theta*exp(-theta*x))
}
data = read.csv2('machines.csv')
Xdata = as.vector(data)
Ydata = Xdata[1:6,1]
L = loglike(Xdata, theta=1:10) #theta > 0
Xindex = matrix(nrow=201, ncol=2)
i = 1
for(theta in seq(80,100,0.1)){
Xindex[i,2] = theta
Xindex[i,1]= max(loglike(Xdata,theta))
i = i + 1
}
#which.max(Xindex[,1])
Yindex = matrix(nrow=201, ncol=2)
i = 1
for(theta in seq(10,30,0.1)){
Yindex[i,2] = theta
Yindex[i,1]= max(loglike(Ydata,theta))
i = i + 1
}
#which.max(Yindex[,1])
plot(Xindex[,2],Xindex[,1], type="l", col="blue", xlab="theta", ylab="Value"
,main="Dependence of Log-likelihood on theta for the entire data") #Theta = 87 is optimal
abline(v=87,col="green")
Xindex
which.max(Xindex[1,])
which.max(Xindex[2,])
which.max(Xindex[,2])
which.max(Xindex[,1])
############
##Step 1-2##
############
loglike=function(x, theta){
result = log(theta*exp(-theta*x))
}
data = read.csv2('machines.csv')
Xdata = as.vector(data)
Ydata = Xdata[1:6,1]
L = loglike(Xdata, theta=1:10) #theta > 0
Xindex = matrix(nrow=201, ncol=2)
i = 1
for(theta in seq(80,100,0.1)){
Xindex[i,2] = theta
Xindex[i,1]= max(loglike(Xdata,theta))
i = i + 1
}
#which.max(Xindex[,1])
Yindex = matrix(nrow=201, ncol=2)
i = 1
for(theta in seq(10,30,0.1)){
Yindex[i,2] = theta
Yindex[i,1]= max(loglike(Ydata,theta))
i = i + 1
}
#which.max(Yindex[,1])
plot(Xindex[,2],Xindex[,1], type="l", col="blue", xlab="theta", ylab="Value"
,main="Dependence of Log-likelihood on theta for the entire data") #Theta = 88.7 is optimal
abline(v=88.7,col="green")
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
############
##Step 1-2##
############
loglike=function(x, theta){
result = log(theta*exp(-theta*x))
}
data = read.csv2('machines.csv')
Xdata = as.vector(data)
Ydata = Xdata[1:6,1]
L = loglike(Xdata, theta=1:10) #theta > 0
Xindex = matrix(nrow=201, ncol=2)
i = 1
for(theta in seq(80,100,0.1)){
Xindex[i,2] = theta
Xindex[i,1]= max(loglike(Xdata,theta))
i = i + 1
}
#which.max(Xindex[,1])
Yindex = matrix(nrow=201, ncol=2)
i = 1
for(theta in seq(10,30,0.1)){
Yindex[i,2] = theta
Yindex[i,1]= max(loglike(Ydata,theta))
i = i + 1
}
#which.max(Yindex[,1])
plot(Xindex[,2],Xindex[,1], type="l", col="blue", xlab="theta", ylab="Value"
,main="Dependence of Log-likelihood on theta for the entire data") #Theta = 88.7 is optimal
abline(v=88.7,col="green")
############
###Step 3###
############
Xindex = matrix(nrow=900, ncol=2)
Yindex = matrix(nrow=900, ncol=2)
i = 0
for(theta in seq(0,90,0.1)){
Xindex[i,2] = theta
Xindex[i,1]= max(loglike(Xdata,theta))
Yindex[i,2] = theta
Yindex[i,1]= max(loglike(Ydata,theta))
i = i + 1
}
plot(Xindex[1:i-1,2],Xindex[1:i-1,1], type="l", col="blue", xlab="theta", ylab="Value",xlim=c(0,90)
,ylim=c(-3,4)) #Theta = 88.7 is optimal
abline(v=88.7,col="green")
par(new=TRUE)
plot(Yindex[1:i-1,2],Yindex[1:i-1,1], type="l", col="orange", xlab = "", ylab = "",xlim=c(0,90)
,ylim=c(-3,4),main="Dependence of Log-likelihood on theta") #Theta = 18.5 is optimal
abline(v=18.5,col="red")
#plot(1:48,L[1:48,1], xlab="Length",ylab="Index",col="blue")
#points(1:6,L[1:6,1], col="orange")
############
###Step 4###
############
bayesmodel=function(x,theta){
lambda=10
log(theta*exp(-theta*x)*lambda*exp(-lambda*theta))
}
#thetaIndex = array(1000)
index2 = matrix(nrow=101, ncol=2)
j = 1
for(theta in seq(0,1,0.01)){
index2[j,2] = theta
index2[j,1]= max(bayesmodel(Xdata,theta))
j = j + 1
}
plot(index2[,2],index2[,1], type = "l", col="blue", xlab="theta", ylab="Value"
, main="Dependence of L(theta)") #Theta = 0.1 is optimal
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.2.R', echo=TRUE)
source('~/Documents/Skolgrejer/MyGitMap/TDDE01/TDDE01 Lab 1.R', echo=TRUE)
